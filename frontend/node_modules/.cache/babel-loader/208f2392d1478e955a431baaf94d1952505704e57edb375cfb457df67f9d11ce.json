{"ast":null,"code":"class BackendService {\n  constructor(baseURL) {\n    this.baseURL = void 0;\n    this.baseURL = baseURL;\n  }\n  async getTestData() {\n    try {\n      const response = await fetch(`${this.baseURL}/`);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Failed to fetch data from the backend');\n    }\n  }\n}\nexport default new BackendService('http://localhost:3000');","map":{"version":3,"names":["BackendService","constructor","baseURL","getTestData","response","fetch","ok","Error","status","data","json","error"],"sources":["C:/ProjectFiles/PorfolioHub/frontend/src/services/BackendService.ts"],"sourcesContent":["import { TestData } from '../models/TestData';\r\nclass BackendService {\r\n  private baseURL: string;\r\n  constructor(baseURL: string) {\r\n    this.baseURL = baseURL;\r\n  }\r\n  public async getTestData(): Promise<TestData> {\r\n    try {\r\n      const response = await fetch(`${this.baseURL}/`);\r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.status}`);\r\n      }\r\n      const data: TestData = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      throw new Error('Failed to fetch data from the backend');\r\n    }\r\n  }\r\n}\r\nexport default new BackendService('http://localhost:3000');"],"mappings":"AACA,MAAMA,cAAc,CAAC;EAEnBC,WAAWA,CAACC,OAAe,EAAE;IAAA,KADrBA,OAAO;IAEb,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EACA,MAAaC,WAAWA,CAAA,EAAsB;IAC5C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACH,OAAO,GAAG,CAAC;MAChD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,UAAUH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC9C;MACA,MAAMC,IAAc,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC5C,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,MAAM,IAAIJ,KAAK,CAAC,uCAAuC,CAAC;IAC1D;EACF;AACF;AACA,eAAe,IAAIP,cAAc,CAAC,uBAAuB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}